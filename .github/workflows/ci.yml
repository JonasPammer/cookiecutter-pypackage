name: CI
permissions: read-all
"on":
  pull_request:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/ci.yml"
      - ".github/cookiecutter-example.yml"
      - "{{ cookiecutter.project_slug }}/**"
      - "cookiecutter.json"
      - "requirements-dev.txt"

jobs:
  test-build:
    name: Test
    runs-on: ubuntu-latest

    steps:
      ### GENERIC COOKIECUTTER INITIALIZATION STEPS ###
      - name: check out the codebase
        uses: actions/checkout@v3

      - name: set up python 3 (pypy)
        uses: actions/setup-python@v4
        with:
          python-version: "pypy-3.7"

      - name: set up python 3
        uses: actions/setup-python@v4
        with:
          python-version: "3.7"

      - name: setup/activate pre-commit cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: ${{ hashFiles('**/.pre-commit-config.yaml') }}

      - name: setup/activate cookiecutter-venv cache
        uses: actions/cache@v3
        with:
          path: cookiecutter-venv
          key: ${{ hashFiles('requirements-dev.txt') }}

      - name: setup/activate project-venv cache
        uses: actions/cache@v3
        with:
          path: project-venv
          key: ${{ hashFiles('*/requirements-*.txt') }}

      - name: install cookiecutter development dependencies
        run: |
          python3 -m venv cookiecutter-venv
          source cookiecutter-venv/bin/activate
          pip3 install -r requirements-dev.txt

      - name: Generate example project from cookiecutter.
        run: |
          source cookiecutter-venv/bin/activate
          cookiecutter . --config-file .github/cookiecutter-example.yml --no-input

      - name: install development dependencies of generated project
        run: |
          python3 -m venv project-venv
          source project-venv/bin/activate
          pip3 install -r requirements-dev.txt
        working-directory: ./some-package

      - name: Run pre-commit on all files in generated project
        run: |
          git init
          git add .
          source project-venv/bin/activate
          pre-commit run --all-files --show-diff-on-failure
        working-directory: ./some-package

      ### COOKIECUTTER SPECIFIC STEPS ###
      ## RUN TESTS ##
      - name: Run tox in generated project
        run: |
          source project-venv/bin/activate
          tox
        working-directory: ./some-package

      ## TEST SETUPTOOLS BUILD ##
      # as per .github/workflows/release-to-pypi.yml
      - name: install build dependencies of generated project
        run: |
          source project-venv/bin/activate
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements-build.txt
        working-directory: ./some-package

      - name: Build python package (wheel etc.)
        run: |
          source project-venv/bin/activate
          python3 -m build
        working-directory: ./some-package

      ## TEST DOCKERFILE ##
      - name: set up qemu
        uses: docker/setup-qemu-action@v2

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Dockerfile of generated project
        uses: docker/build-push-action@v3
        with:
          context: ./some-package
          tags: jonaspammer/some-package:latest
          load: true
          push: false

      - name: Run Trivy vulnerability scanner on generated docker image
        uses: aquasecurity/trivy-action@0.5.1
        with:
          image-ref: jonaspammer/some-package:latest
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"