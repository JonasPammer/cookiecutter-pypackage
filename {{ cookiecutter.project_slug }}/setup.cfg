{#- dict in which key is the license name as per cookiecutter.json and the values are  #}
{#- [0] SPDX identifier (https://spdx.org/licenses/) #}
{#- [1] Python Classifier (https://pypi.org/classifiers/) #}
{%- set license_classifiers = {
    "MIT License": ["MIT", "License :: OSI Approved :: MIT License"],
    "The Unlicense": ["Unlicense", "License :: OSI Approved :: The Unlicense (Unlicense)"],
    "Boost Software License 1.0": ["BSL-1.0", "License :: OSI Approved :: Boost Software License 1.0 (BSL-1.0)"],
    "Apache License 2.0": ["Apache-2.0", "License :: OSI Approved :: Apache Software License"],
    "Mozilla Public License 2.0": ["MPL-2.0", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)"],
    "GNU LGPLv3": ["LGPL-3.0", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)"],
    "GNU GPLv3": ["GPL-3.0", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)"],
    "GNU APGLv3": ["APGL-3.0", "License :: OSI Approved :: GNU Affero General Public License v3 (AGPLv3)"]
} -%}

[metadata]
name = {{ cookiecutter.pkg_name }}
version = 0.1.0
description = {{ cookiecutter.project_short_description }}
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/JonasPammer/{{ cookiecutter.project_slug }}
author = {{ cookiecutter.full_name }}
author_email = {{ cookiecutter.email }}
{%- if cookiecutter.open_source_license in license_classifiers %}
{#- Note that setup-cfg-fmt fills this in by analyzing the `license_file` #}
license = {{ license_classifiers[cookiecutter.open_source_license][0] }}
{%- endif %}
license_file = LICENSE
classifiers =
    Development Status :: 2 - Pre-Alpha
{%- if cookiecutter.command_line_interface == "No command-line interface" -%}
    Environment :: No Input/Output (Daemon)
{%- else %}
    Environment :: Console
{%- endif %}
{%- if cookiecutter.open_source_license in license_classifiers %}
    {{ license_classifiers[cookiecutter.open_source_license][1] }}
{%- endif %}
    Natural Language :: English
    Operating System :: MacOS
    Operating System :: Microsoft
    Operating System :: OS Independent
    Operating System :: POSIX :: Linux
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Typing :: Typed

[options]
packages = find:
install_requires =
    {% if cookiecutter.command_line_interface|lower == 'click' %}Click>=8.0{% endif %}
    attrs>=21.0
    pyyaml
    types-PyYAML
python_requires = >=3.7

[options.packages.find]
exclude =
    tests*
    testing*

[options.entry_points]
console_scripts =
    {{ cookiecutter.pkg_name }} = {{ cookiecutter.pkg_name }}.{{ cookiecutter.pkg_name }}:main

[bdist_wheel]
universal = True

[coverage:run]
plugins = covdefaults

[mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[mypy-testing.*]
disallow_untyped_defs = false

[mypy-tests.*]
disallow_untyped_defs = false

[isort]
profile = black

[flake8]
max-line-length = 88
per-file-ignores =
    tests/*.py: S101, WPS226, WPS432
