name: Docker Image Scan / Test / Tag, Build & Push / Sync README

"on":
  push:
    branches:
      - "**"
      - "!dependabot*"
      - "!pre-commit*"
    tags:
      - "v*"
    paths:
      - ".github/workflows/docker.yml"
      - ".dockerignore"
      - "Dockerfile"
      - "docker_smoke_test.py"
      - "README_DOCKER.adoc"
      # as per .dockerignore:
      - "requirements.txt"
      - "setup.cfg"
      - "setup.py"
      - "LICENSE"
      - "{{ cookiecutter.pkg_name }}/**"
  pull_request:
    branches:
      - "main"
      - "master"

permissions:
  contents: read

jobs:
  trivy-security:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: set up qemu for docker
        uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8 # tag=v2

      - name: set up docker buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # tag=v2

      - name: Build Dockerfile.
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94 # tag=v3
        with:
          context: .
          push: false
          load: true
          tags: "{{ cookiecutter.dockerhub_username }}/{{ cookiecutter.project_slug }}:local"

      - name: Run Trivy vulnerability scanner on built Image.
        uses: aquasecurity/trivy-action@d63413b0a4a4482237085319f7f4a1ce99a8f2ac # tag=0.7.1
        with:
          image-ref: "{{ cookiecutter.dockerhub_username }}/{{ cookiecutter.project_slug }}:local"
          format: table
          exit-code: "1"
          # relevant read: https://pythonspeed.com/articles/docker-security-scanner/
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

  smoke-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: set up qemu for docker
        uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8 # tag=v2

      - name: set up docker buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # tag=v2

      # We've successfully built it, we've successfully statically scanned it,
      # and now we run it
      - name: Run Docker Smoke Test
        run: python3 docker_smoke_test.py

  dockerhub:
    if: github.event_name != 'pull_request'
    needs: [trivy-security, smoke-test]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      # https://github.com/docker/metadata-action#semver
      - name: Extract Metadata from Git references (used for tagging the Docker image).
        id: meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a # tag=v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            {{ cookiecutter.dockerhub_username }}/{{ cookiecutter.project_slug }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={% raw %}{{version}}{% endraw %}
            type=semver,pattern={% raw %}{{major}}.{{minor}}{% endraw %}
            type=sha

      - name: set up qemu for docker
        uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8 # tag=v2

      - name: set up docker buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # tag=v2

      - name: login to dockerhub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # tag=v2
        with:
          username: "{{ cookiecutter.dockerhub_username }}"
          password: "{% raw %}${{ secrets.DOCKERHUB_TOKEN }}{% endraw %}"

      - name: Build Dockerfile and push.
        uses: docker/build-push-action@c84f38281176d4c9cdb1626ffafcd6b3911b5d94 # tag=v3
        with:
          context: .
          push: "{% raw %}${{ github.event_name != 'pull_request' }}{% endraw %}"
          tags: "{% raw %}${{ steps.meta.outputs.tags }}{% endraw %}"
          labels: "{% raw %}${{ steps.meta.outputs.labels }}{% endraw %}"

  dockerhub-readme:
    if: github.event_name != 'pull_request'
    needs: dockerhub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: setup ruby
        uses: ruby/setup-ruby@6148f408d35df04b0189be5e64c1458377b8ae13 # tag=v1
        with:
          ruby-version: "2.7.0"

      - name: install asciidoctor
        run: gem install --no-document asciidoctor rouge coderay

      - name: Convert README_DOCKER.adoc to README-DOCKER.xml using Asciidoctor.
        run: asciidoctor -b docbook README_DOCKER.adoc

      # https://github.com/pandoc/pandoc-action-example
      - name: Convert README_DOCKER.xml to README.md using Pandoc.
        uses: docker://pandoc/core@sha256:d2c4aa0c26e9480b8ab15eb952f49cb6c33ca5635417e1bb064e715a5a32a9e9
        with:
          args: "-f docbook -t markdown_strict README_DOCKER.xml -o README.md"

      # https://github.com/docker/build-push-action/issues/21
      - name: Sync README.md to DockerHub.
        uses: peter-evans/dockerhub-description@da890086d39c735e41d8823c8a95bde4302c3d64 # tag=v3
        with:
          username: "{{ cookiecutter.dockerhub_username }}"
          password: "{% raw %}${{ secrets.DOCKERHUB_PASSWORD }}{% endraw %}"
          repository: "{{ cookiecutter.dockerhub_username }}/{{ cookiecutter.project_slug }}"
          short-description: "{% raw %}${{ github.event.repository.description }}{% endraw %}"
