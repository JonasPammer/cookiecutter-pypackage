---
name: Run Tox and Coverage
permissions: read-all
"on":
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/ci.yml"
      - "tests/**"
      - ".gitattributes"
      - ".yamllint"
      - "pyproject.toml"
      - "requirements-dev.txt"
      - "tox.ini"
      # as per .dockerignore:
      - "requirements.txt"
      - "setup.cfg"
      - "setup.py"
      - "LICENSE"
      - "{{ cookiecutter.pkg_name }}/**"
  schedule:
    # At 05:00 on Sunday.
    - cron: "0 5 * * 0"

# Cancel running jobs when a pull request is updated
concurrency:
  group: {% raw %}${{ github.workflow }}{% endraw %}-{% raw %}${{ github.event.pull_request.number || github.sha }}{% endraw %}
  cancel-in-progress: true

jobs:
  ci:
    name: {% raw %}${{ matrix.os }}{% endraw %} / CPython {% raw %}${{ matrix.python-version }}{% endraw %} / {% raw %}${{ matrix.pip-version }}{% endraw %} pip
    runs-on: {% raw %}${{ matrix.os }}{% endraw %}-latest
    permissions:
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
          - Windows
          - macOS
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        pip-version:
          - "latest"
          - "previous"
        include:
          - os: Ubuntu
            python-version: 3.11-dev
            pip-version: latest
          - os: Ubuntu
            python-version: 3.7
            pip-version: main
    env:
      PY_COLORS: 1
      TOXENV: pip{% raw %}${{ matrix.pip-version }}{% endraw %}
      TOX_PARALLEL_NO_SPINNER: 1
    steps:
      - name: check out the codebase
        uses: actions/checkout@v3

      - name: set up python {% raw %}${{ matrix.python-version }}{% endraw %} using github's action
        uses: actions/setup-python@v3
        if: "!endsWith(matrix.python-version, '-dev')"
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

      - name: set up python {% raw %}${{ matrix.python-version }}{% endraw %} using deadsnakes's action
        if: endsWith(matrix.python-version, '-dev')
        uses: deadsnakes/action@v2.1.1
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

      - name: log python version info ({% raw %}${{ matrix.python-version }}{% endraw %})
        run: python --version --version

      - name: get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: setup/activate pip cache
        uses: actions/cache@v3
        with:
          path: {% raw %}${{ steps.pip-cache.outputs.dir }}{% endraw %}
          key: >-
            {% raw %}${{ runner.os }}{% endraw %}-pip-
            {% raw %}${{ hashFiles('setup.*') }}{% endraw %}-
            {% raw %}${{ hashFiles('requirements*.txt') }}{% endraw %}-
            {% raw %}${{ hashFiles('tox.ini') }}{% endraw %}-
            {% raw %}${{ hashFiles('.pre-commit-config.yaml') }}{% endraw %}
          restore-keys: |
            {% raw %}${{ runner.os }}{% endraw %}-pip-
            {% raw %}${{ runner.os }}{% endraw %}-

      - name: install dependencies
        run: |
          python -m pip install -r requirements-dev.txt
          python -m pip install -r requirements.txt

      # tox automatically pip installs local directory
      - name: Run tox with '{% raw %}${{ env.TOXENV }}{% endraw %}' environment
        run: tox

      - name: generate coverage xml
        run: .tox/pip{% raw %}${{ matrix.pip-version }}{% endraw %}/{% raw %}${{ matrix.os == 'Windows' && 'Scripts' || 'bin' }}{% endraw %}/coverage xml -o coverage.xml

      - name: Upload coverage to Codecov and add Pull Request comment
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          name: {% raw %}${{ runner.os }}{% endraw %}-{% raw %}${{ matrix.python-version }}{% endraw %}-{% raw %}${{ matrix.pip-version }}{% endraw %}

  pypy:
    name: {% raw %}${{ matrix.os }}{% endraw %} / {% raw %}${{ matrix.python-version }}{% endraw %} / {% raw %}${{ matrix.pip-version }}{% endraw %} pip
    runs-on: {% raw %}${{ matrix.os }}{% endraw %}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - Ubuntu
          - MacOS
          - Windows
        python-version:
          - pypy-3.7
        pip-version:
          - latest
    env:
      PY_COLORS: 1
      TOXENV: pip{% raw %}${{ matrix.pip-version }}{% endraw %}
      TOX_PARALLEL_NO_SPINNER: 1
    steps:
      - name: check out the codebase
        uses: actions/checkout@v3

      - name: set up python {% raw %}${{ matrix.python-version }}{% endraw %}
        uses: actions/setup-python@v3
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

      - name: install dependencies
        run: |
          python -m pip install -r requirements-dev.txt
          python -m pip install -r requirements.txt

      # tox automatically pip installs local directory
      - name: Run tox with '{% raw %}${{ env.TOXENV }}{% endraw %}' environment
        run: tox
