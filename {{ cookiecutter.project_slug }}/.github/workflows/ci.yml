---
name: CI
permissions: read-all
"on":
  workflow_dispatch:
    inputs:
      lint:
        description: "Lint"
        required: true
        default: true
        type: boolean
  pull_request:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/ci.yml"
      - "tests/**"
      - ".gitattributes"
      - ".yamllint"
      - "pyproject.toml"
      - "requirements-dev.txt"
      - "tox.ini"
      # as per .dockerignore:
      - "setup.cfg"
      - "setup.py"
      - "LICENSE"
      - "{{ cookiecutter.pkg_name }}/**"
  schedule:
    # At 05:00 on Sunday.
    - cron: "0 5 * * 0"

jobs:
  ci:
    name: Run Tox and generate Coverage Report.
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: check out the codebase
        uses: actions/checkout@v3

      - name: set up python 3 (pypy)
        uses: actions/setup-python@v3
        with:
          python-version: "pypy-3.7"

      - name: set up python 3
        uses: actions/setup-python@v3
        with:
          python-version: "3.7"

      - name: setup/activate pre-commit cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: {% raw %}${{ hashFiles('.pre-commit-config.yaml') }}{% endraw %}

      - name: setup/activate project-venv cache
        uses: actions/cache@v3
        with:
          path: project-venv
          key: {% raw %}${{ hashFiles('requirements-dev.txt') }}{% endraw %}

      - name: install development dependencies
        run: |
          python3 -m venv project-venv
          source project-venv/bin/activate
          pip3 install -r requirements-dev.txt

      # tox automatically installs local package
      - name: Run tox.
        run: |
          source project-venv/bin/activate
          tox

      - name: generate coverage xml
        run: .tox/py3/bin/coverage xml -o coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
